version: '3.2' #this refers to the version of the dockerfile format.

# Version 3 of the docker-compose format:
# https://docs.docker.com/compose/compose-file/

services:
    expungement_generator:
        # use natev/eg-docker-frontend when testing if the pushed image works right.
        image: natev/eg-docker-frontend:latest 
        # use eg_front and build ... to build the image locally.
        #image: eg_front
        #build:
        #    context: .
        #    dockerfile: Dockerfile
        environment:
            BASE_URL: "http://localhost:9090/"
            CHARGE_DB_HOST: db
            CHARGE_DB_USER: eg_user
            CHARGE_DB_PASS: somerandompassword
            CHARGE_DB_NAME: cpcms_aopc_summary
            DB_HOST: db
            DB_NAME: eg_db
            DB_USER: eg_user
            DB_PASS: somerandompassword
            SENDGRID_KEY: somerandomkey
            docketscraperAPIURL: "docketscraperapi:8000"
        networks:
            - eg-net
        ports:
            - "9090:9090"
        volumes:
            - type: volume 
              source: egdata
              target: /data
    db:
        image: eg_db # or natev/eg-docker-db:latest
        build:
            context: .
            dockerfile: db_dockerfile
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: someBigOleComplexPassword
            MYSQL_DATABASE: eg_db
            MYSQL_USER: eg_user
            MYSQL_PASSWORD: somerandompassword
        networks:
            - eg-net
        expose:
            - "3306"
        volumes:
            - egdb:/var/lib/mysql
    docketscraperapi:
      image: "natev/eg-docketscraper"
      restart: always
      volumes: 
            - apidata:/data/
      environment:
        SECRET_KEY: "${SECRET_KEY}"
        DB: "/data/"
        DEBUG: "TRUE"
        ALLOWED_HOST: "docketscraperapi"
      networks:
        - eg-net
      expose:
          - "8000"
networks:
    eg-net:
volumes:
    egdata:
    apidata:
    egdb:
